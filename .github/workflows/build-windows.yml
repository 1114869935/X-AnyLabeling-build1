
# 文件路径: .github/workflows/build-windows-exe.yml
# 【终极强制打包版】 - 手动查找 onnxruntime 路径并使用 --add-binary 强制打包其所有二进制文件

name: Build X-AnyLabeling for Windows (Final & Forceful)

on:
  workflow_dispatch:

jobs:
  build-on-windows:
    runs-on: windows-latest

    steps:
      # 1. 下载代码，并拉取 LFS 大文件
      - name: Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      # 2. 设置与您开发环境一致的 Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'

      # 3. 安装 VC++ 运行库 (保留，以防万一)
      - name: Manually Install Microsoft Visual C++ Redistributable
        run: |
          Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -OutFile vc_redist.x64.exe
          Start-Process -FilePath .\vc_redist.x64.exe -ArgumentList '/install /passive /norestart' -Wait
      # 4. 安装所有 Python 依赖
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          
      # 5. 【核心修复】使用 PyInstaller 打包，并强制包含 ONNX Runtime 的二进制文件
      - name: Run PyInstaller with Forced Binaries
        run: |
          # 动态获取 onnxruntime 库的安装路径
          $ORT_PATH = python -c "import os, onnxruntime; print(os.path.dirname(onnxruntime.__file__))"
          echo "ONNX Runtime Path found at: $ORT_PATH"
          
          # 运行 PyInstaller，使用 --add-binary 强制包含整个 onnxruntime 文件夹
          pyinstaller --noconfirm --onedir --clean --console --name "BacteriaLabelingTool" `
          --icon "anylabeling/resources/images/icon.ico" `
          --add-data "models;models" `
          --add-data "anylabeling/configs/auto_labeling/bacteria_autoseg.yaml;anylabeling/configs/auto_labeling" `
          --add-data "anylabeling/configs/auto_labeling;anylabeling/configs/auto_labeling" `
          --add-data "anylabeling/configs;anylabeling/configs" `
          --add-data "anylabeling/views/labeling/widgets/auto_labeling/auto_labeling.ui;anylabeling/views/labeling/widgets/auto_labeling" `
          --add-data "anylabeling/services/auto_labeling/configs/bert;anylabeling/services/auto_labeling/configs/bert" `
          --add-data "anylabeling/services/auto_labeling/configs/clip;anylabeling/services/auto_labeling/configs/clip" `
          --add-data "anylabeling/services/auto_labeling/configs/ppocr;anylabeling/services/auto_labeling/configs/ppocr" `
          --add-data "anylabeling/services/auto_labeling/configs/ram;anylabeling/services/auto_labeling/configs/ram" `
          --add-binary "$ORT_PATH;onnxruntime" `
          anylabeling/app.py
      # 6. 上传最终产物
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: dist/BacteriaLabelingTool
